import React, { FC } from "react";
import { NavigationConfig, NavType, INavigationInternalCallbacks } from "./types";
interface INavigationProps {
    variant: NavType;
    config: NavigationConfig;
    useLocation: () => any;
    internalCallbacks?: INavigationInternalCallbacks;
    isDesktop?: boolean;
    open?: boolean;
    className?: string;
    ariaLabel?: string;
}
/**
 * ============================================================================
 * Navigation
 * ============================================================================
 *
 *  All navigation state is computed in the NavigationReducer.
 *
 *  Navigation state and API for updating it is exposed via NavigationContext.
 *
 *  This file consumes the context and contains all the rendering logic and
 *  shared styles and thus is only concerned with the markup.
 *
 *  The navigation for all variants is divided in to three main sections:
 *
 *      - Panel
 *
 *          this corresponds to the ul element
 *
 *      - PanelItemAction
 *
 *          this corresponds to li element that contains a link or callback
 *
 *      - PanelItemTrigger
 *
 *          this corresponds to an li element that contains a button with label
 *          that expands a child Panel
 *
 *
 *  Only put styles in this file that apply to _all_ navigation variants.
 *
 *  Variant specific styles should reside on ./styles/{variant}/{'mobile','isDesktop'}.ts
 *  and be imported dynamically via getStylesForVariant call
 */
export declare const Navigation: FC<INavigationProps>;
export declare const NavigationContainer: import("styled-components").StyledComponent<React.FC<{
    isDesktop: boolean;
    open: boolean;
    ariaLabel?: string;
    isGlobalWithSecondary?: boolean;
    className?: string;
}>, import("styled-components").DefaultTheme, {}, never>;
export {};
