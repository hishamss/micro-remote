import React from "react";
import { PressEvent } from "@react-types/shared";
interface IPanel {
    /**
     * Panel title.
     */
    title: React.ReactNode;
    /**
     * Panel subheading detail.
     */
    headerDetail?: React.ReactNode;
    /**
     * Optional icon to use instead of default panel expand indicator icon.
     */
    icon?: React.ReactNode;
    /**
     * Optional prop to change the header tag for the title. Defaults to h3.
     */
    titleAs?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
    /**
     * Used for controlled Panel component.
     */
    onHeaderPress?: (e: PressEvent) => void;
    /**
     * Used for controlled Panel component.
     */
    open?: boolean;
    /**
     * Optional classname applied to the component root element.
     */
    className?: string;
    /**
     * Panel children
     */
    children?: React.ReactNode;
    /**
     * Set the panel to be initially closed.
     */
    initiallyClosed?: boolean;
    /**
     * Whether the panel can be collapsed.
     */
    collapsible?: boolean;
}
interface PanelStaticProps {
    Group: typeof PanelGroup;
    AccordionGroup: typeof AccordionGroup;
}
interface IAccordionProps {
    className?: string;
    children?: React.ReactNode;
    initiallyOpen?: number;
    onHeaderPress?: (index: number) => void;
    open?: number;
}
declare const AccordionGroup: import("styled-components").StyledComponent<React.FC<IAccordionProps>, import("styled-components").DefaultTheme, {}, never>;
declare const PanelGroup: import("styled-components").StyledComponent<"div", import("styled-components").DefaultTheme, {}, never>;
export declare const Panel: import("styled-components").StyledComponent<React.FC<IPanel> & PanelStaticProps, import("styled-components").DefaultTheme, {}, never>;
export {};
